# CI build script for Travis.
# See https://docs.travis-ci.com/user/multi-os/ for more info.

os:
- linux
- osx

sudo: required
dist: trusty

language:
- cpp

compiler:
# clang compilation will be tested by xcode.
#- clang
- gcc

env:
  global:
    - GIT_LFS_VERSION="1.1.0"

before_install:
# Current directory is .../build/KhronosGroup/KTX. Go up to build.
# The already installed GIT LFS is very old - 0.5.0. Need a more recent
# one to work with the GitHub server.
# Pull just the LFS'ed linux, mac and ios files to avoid a panic when pulling all.
- |
  if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
    pushd ../..
    wget https://github.com/github/git-lfs/releases/download/v$GIT_LFS_VERSION/git-lfs-linux-amd64-$GIT_LFS_VERSION.tar.gz
    tar -zxvf git-lfs-linux-amd64-$GIT_LFS_VERSION.tar.gz
    export PATH=`pwd`/git-lfs-1.1.0:$PATH
    popd
    git lfs install
    git lfs pull --include="other_lib/linux"
  fi
- |
  if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
    brew update --quiet > /dev/null
    #brew tap homebrew/binary --quiet
    brew install git-lfs
    git lfs install
    git lfs version
  fi

install:
- |
  if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
    sudo apt-get -qq update; sudo apt-get -qq install doxygen
  fi
- if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install doxygen; fi
- pushd ../..
- git clone https://github.com/msc-/gyp
- cd gyp && sudo ./setup.py install && cd ..
- popd

before_script:
# Pull just the LFS'ed linux, mac and ios files to avoid a panic when pulling all.
- if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then git lfs pull --include=other_lib/linux; fi
- if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then git lfs pull --include=other_lib/{ios,mac}; fi
- if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then ls -l other_lib/linux/Debug-x64; fi
- if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then ls -l other_lib/mac/Debug; fi

script:
- |
  if [[ "$TRAVIS_OS_NAME" == "linux" ]] ; then
    cd build/make/linux
    make BUILDTYPE=Debug
    make BUILDTYPE=Release
  fi
- |
  if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
    cd build/xcode/mac
    xcodebuild -project ktxtests.xcodeproj -alltargets -configuration Debug
    xcodebuild -project ktxtests.xcodeproj -alltargets -configuration Release
    xcodebuild -project ktxtools.xcodeproj -alltargets -configuration Debug
    xcodebuild -project ktxtools.xcodeproj -alltargets -configuration Release
    cd ../ios
    xcodebuild -project ktxtests.xcodeproj -alltargets -configuration Debug
    xcodebuild -project ktxtests.xcodeproj -alltargets -configuration Release
    xcodebuild -project ktxtools.xcodeproj -alltargets -configuration Debug
    xcodebuild -project ktxtools.xcodeproj -alltargets -configuration Release
  fi
