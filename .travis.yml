# CI build script for Travis.
# See https://docs.travis-ci.com/user/multi-os/ for more info.

os:
- linux
- osx

sudo: required
dist: trusty

language:
- cpp

compiler:
# clang compilation will be tested by xcode.
#- clang
- gcc

env:
  global:
    - GIT_LFS_VERSION="1.1.0"

before_install:
# Current directory is .../build/KhronosGroup/KTX. Go up to build.
# The already installed GIT LFS is very old - 0.5.0. Need a more recent
# one to work with the GitHub server.
# Pull just the LFS'ed linux, mac and ios files to avoid a panic when pulling all.
- |
  case "${TRAVIS_OS_NAME:-linux}" in
  linux)
    pushd ../..
    wget https://github.com/github/git-lfs/releases/download/v$GIT_LFS_VERSION/git-lfs-linux-amd64-$GIT_LFS_VERSION.tar.gz
    tar -zxvf git-lfs-linux-amd64-$GIT_LFS_VERSION.tar.gz
    export PATH=`pwd`/git-lfs-1.1.0:$PATH
    popd
    git lfs install
    git lfs pull --include="other_lib/linux"
    ;;
  osx)
    brew update > /dev/null
    brew install git-lfs
    git lfs install
    git lfs version
    ;;
  esac

install:
- |
  case "${TRAVIS_OS_NAME:-linux}" in
  linux)
    sudo apt-get -qq update; sudo apt-get -qq install doxygen
    ;;
  osx)
    brew install doxygen
    ;;
  esac
- pushd ../..
- git clone https://github.com/msc-/gyp
- cd gyp && sudo ./setup.py install && cd ..
- popd

before_script:
- |
  # Pull just the LFS'ed linux, mac and ios files to avoid a panic when pulling all.
  case "${TRAVIS_OS_NAME:-linux}" in
  linux)
    git lfs pull --include=other_lib/linux
    ls -l other_lib/linux/Debug-x64
    ;;
  osx)
    git lfs pull --include=other_lib/{ios,mac}
    ls -l other_lib/mac/Debug
    ;;
  esac

script:
- |
  case "${TRAVIS_OS_NAME:-linux}" in
  linux)
    cd build/make/linux
    make BUILDTYPE=Debug
    make BUILDTYPE=Release
    ;;
  osx)
    # Due to the spaces in the platform names, must use array variables so
    # destination args can be expanded to a single word.
    OSX_XCODE_OPTIONS=(-alltargets -destination "plafform=OS X,arch=x86_64" -destination "platform=OS X,arch=i386")
    IOS_XCODE_OPTIONS=(-alltargets -destination "platform=generic/iOS" -destination "platform=iOS Simulator,OS=latest")
    XCODE_CODESIGN_ENV='CODE_SIGN_IDENTITY= CODE_SIGNING_REQUIRED=NO'
    echo "${OSX_XCODE_OPTIONS[@]}"
    echo "${IOS_XCODE_OPTIONS[@]}"
    echo $XCODE_CODESIGN_ENV
    #KEY_CHAIN=xcode-build.keychain
    #security create-keychain -p travis $KEY_CHAIN
    # Make the keychain the default so identities are found
    #security default-keychain -s $KEY_CHAIN
    ## Unlock the keychain
    #security unlock-keychain -p travis $KEY_CHAIN
    ## Set keychain locking timeout to 3600 seconds
    #security set-keychain-settings -t 3600 -u $KEY_CHAIN
    cd build/xcode/mac
    xcodebuild -project ktxtests.xcodeproj "${OSX_XCODE_OPTIONS[@]}" -configuration Debug $XCODE_CODESIGN_ENV
    xcodebuild -project ktxtests.xcodeproj "${OSX_XCODE_OPTIONS[@]}" -configuration Release $XCODE_CODESIGN_ENV
    xcodebuild -project ktxtools.xcodeproj "${OSX_XCODE_OPTIONS[@]}" -configuration Debug $XCODE_CODESIGN_ENV
    xcodebuild -project ktxtools.xcodeproj "${OSX_XCODE_OPTIONS[@]}" -configuration Release $XCODE_CODESIGN_ENV
    #xcodebuild -project ktxtests.xcodeproj -alltargets -configuration Debug CODE_SIGNING_REQUIRED=NO
    #xcodebuild -project ktxtests.xcodeproj -alltargets -configuration Release CODE_SIGNING_REQUIRED=NO
    #xcodebuild -project ktxtools.xcodeproj -alltargets -configuration Debug CODE_SIGNING_REQUIRED=NO
    #xcodebuild -project ktxtools.xcodeproj -alltargets -configuration Release CODE_SIGNING_REQUIRED=NO
    cd ../ios
    xcodebuild -project ktxtests.xcodeproj "${IOS_XCODE_OPTIONS[@]}" -configuration Debug $XCODE_CODESIGN_ENV
    xcodebuild -project ktxtests.xcodeproj "${IOS_XCODE_OPTIONS[@]}" -configuration Release $XCODE_CODESIGN_ENV
    xcodebuild -project ktxtools.xcodeproj "${IOS_XCODE_OPTIONS[@]}" -configuration Debug $XCODE_CODESIGN_ENV
    xcodebuild -project ktxtools.xcodeproj "${IOS_XCODE_OPTIONS[@]}" -configuration Release $XCODE_CODESIGN_ENV
    #xcodebuild -project ktxtests.xcodeproj -alltargets -configuration Debug CODE_SIGNING_REQUIRED=NO
    #xcodebuild -project ktxtests.xcodeproj -alltargets -configuration Release CODE_SIGNING_REQUIRED=NO
    #xcodebuild -project ktxtools.xcodeproj -alltargets -configuration Debug CODE_SIGNING_REQUIRED=NO
    #xcodebuild -project ktxtools.xcodeproj -alltargets -configuration Release CODE_SIGNING_REQUIRED=NO
    ;;
  esac
